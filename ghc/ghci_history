:quit
determineRange @Int
determineRange = [minBound, maxBound]
determineRange :: (Bounded a) => [a]
determineRange = [minBound, maxBound]
determineRange :: (Bounded a) => [a]
:type Int
:type Bounded Int
:type Bounded
:type ( (1 :: Int) + (2 :: Integer) )
:type( (1 :: Int) + (2 :: Integer) )
:clear
:type (+ (1:: Int))
:type (+ (1: Int))
:type (+ 1)
:type (2 + 1)
:type (+ 1)
:type Left 5
:type Nothing
:type Just True
:type fromInteger
:type fromIntegral 
:type mod
:type (/)
:type (+)
:type (==)
:type 5.0
:type 5
:type True
:type (==)
:type 5
:type 
:quit
exit
